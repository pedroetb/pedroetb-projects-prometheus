version: '3.5'

services:
  prometheus:
    image: ${IMAGE_NAME}:${IMAGE_TAG:-latest}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=${STORAGE_TSDB_RETENTION_TIME}'
      - '--storage.tsdb.retention.size=${STORAGE_TSDB_RETENTION_SIZE}'
    user: '0:0'
    networks:
      - metric-net
      - traefik-net
    environment:
      - JOBS
    volumes:
      - prometheus:/prometheus
    configs:
      - source: node_rules
        target: /etc/prometheus/swarm_node.rules.yml
      - source: task_rules
        target: /etc/prometheus/swarm_task.rules.yml
      - source: job_rules
        target: /etc/prometheus/swarm_job.rules.yml
      - source: service_rules
        target: /etc/prometheus/swarm_service.rules.yml
    healthcheck:
      test: wget --spider -q http://localhost:9090
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 3m
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.frontend.auth.basic.users: ${UI_AUTH}
        traefik.frontend.rule: Host:prometheus.${PUBLIC_HOSTNAME}
        traefik.backend: prometheus
        traefik.port: '9090'
      restart_policy:
        delay: 10s
        window: 2m

networks:
  metric-net:
    name: ${METRIC_NET_NAME:-metric-net}
    driver: overlay
    attachable: ${METRIC_NET_ATTACHABLE:-true}

  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    external: true

configs:
  task_rules:
    name: ${TASK_RULES_NAME:-task_rules}
    file: ./rules/swarm_task.rules.yml

  job_rules:
    name: ${JOB_RULES_NAME:-job_rules}
    file: ./rules/swarm_job.rules.yml

  service_rules:
    name: ${SERVICE_RULES_NAME:-service_rules}
    file: ./rules/swarm_service.rules.yml
