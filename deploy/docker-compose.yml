version: '3.7'

services:
  prometheus:
    image: ${IMAGE_NAME:-prom/prometheus}:${IMAGE_TAG:-latest}
    entrypoint: ${CONFIG_PATH}/${ENTRYPOINT_FILENAME}
    command:
      - --config.file=${CONFIG_PATH}/${FINAL_CONFIG_FILENAME}
      - --storage.tsdb.path=${DATA_PATH}
      - --storage.tsdb.retention.time=${STORAGE_TSDB_RETENTION_TIME}
      - --storage.tsdb.retention.size=${STORAGE_TSDB_RETENTION_SIZE}
      - --web.external-url=https://${TRAEFIK_SUBDOMAIN}.${TRAEFIK_DOMAIN}
    environment:
      CONFIG_PATH:
      INITIAL_CONFIG_FILENAME:
      FINAL_CONFIG_FILENAME:
      JOBS:
    networks:
      metric-net:
      traefik-net:
    volumes:
      - data-vol:${DATA_PATH}
    configs:
      - source: entrypoint-config
        target: ${CONFIG_PATH}/${ENTRYPOINT_FILENAME}
        mode: 0555
      - source: prometheus-config
        target: ${CONFIG_PATH}/${INITIAL_CONFIG_FILENAME}
      - source: node-rules-config
        target: ${CONFIG_PATH}/node.rules.yml
      - source: service-rules-config
        target: ${CONFIG_PATH}/service.rules.yml
      - source: task-rules-config
        target: ${CONFIG_PATH}/task.rules.yml
    healthcheck:
      test: wget --spider -q http://localhost:${PORT}
      interval: ${HEALTHCHECK_INTERVAL:-1m}
      timeout: ${HEALTHCHECK_TIMEOUT:-30s}
      retries: ${HEALTHCHECK_RETRIES:-10}
      start_period: ${HEALTHCHECK_START_PERIOD:-3m}
    deploy:
      mode: replicated
      replicas: ${REPLICAS:-1}
      restart_policy:
        delay: ${RESTART_DELAY:-3s}
      update_config:
        delay: ${UPDATE_DELAY:-1m}
      labels:
        traefik.enable: 'true'
        traefik.http.routers.prometheus.entrypoints: ${TRAEFIK_ENTRYPOINT:-https}
        traefik.http.routers.prometheus.tls.certresolver: ${TRAEFIK_CERTRESOLVER:-default}
        traefik.http.routers.prometheus.rule: Host(`${TRAEFIK_SUBDOMAIN}.${TRAEFIK_DOMAIN}`)
        traefik.http.middlewares.prometheus-auth.basicauth.users: ${TRAEFIK_AUTH}
        traefik.http.routers.prometheus.middlewares: prometheus-auth
        traefik.http.services.prometheus.loadbalancer.server.port: ${PORT}
      resources:
        limits:
          cpus: '${RESOURCES_LIMITS_CPUS:-0.5}'
          memory: ${RESOURCES_LIMITS_MEMORY:-256M}
        reservations:
          cpus: '${RESOURCES_RESERVATIONS_CPUS:-0.001}'
          memory: ${RESOURCES_RESERVATIONS_MEMORY:-128M}

networks:
  metric-net:
    name: ${METRIC_NET_NAME:-metric-net}
    driver: ${METRIC_NET_DRIVER:-overlay}
    attachable: ${METRIC_NET_ATTACHABLE:-true}

  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    driver: ${TRAEFIK_NET_DRIVER:-overlay}
    external: true

volumes:
  data-vol:
    name: ${DATA_VOL_NAME}
    driver: local
    driver_opts:
      type: ${VOL_TYPE}
      o: addr=${VOL_ADDR},${VOL_OPTS}
      device: ${DATA_VOL_DEVICE}

configs:
  entrypoint-config:
    name: ${ENTRYPOINT_CONFIG_NAME:-prometheus-entrypoint}
    file: ./config/entrypoint.sh

  prometheus-config:
    name: ${PROMETHEUS_CONFIG_NAME:-prometheus-config}
    file: ./config/prometheus.yml

  node-rules-config:
    name: ${NODE_RULES_CONFIG_NAME:-prometheus-node-rules}
    file: ./config/rules/swarm_node.rules.yml

  service-rules-config:
    name: ${SERVICE_RULES_CONFIG_NAME:-prometheus-service-rules}
    file: ./config/rules/swarm_service.rules.yml

  task-rules-config:
    name: ${TASK_RULES_CONFIG_NAME:-prometheus-task-rules}
    file: ./config/rules/swarm_task.rules.yml
